//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplicationMuseum.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Museum", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceMuseumNew")]
    [System.SerializableAttribute()]
    public partial class Museum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EstablishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MuseumAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MuseumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MuseumNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Established {
            get {
                return this.EstablishedField;
            }
            set {
                if ((this.EstablishedField.Equals(value) != true)) {
                    this.EstablishedField = value;
                    this.RaisePropertyChanged("Established");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MuseumAddress {
            get {
                return this.MuseumAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MuseumAddressField, value) != true)) {
                    this.MuseumAddressField = value;
                    this.RaisePropertyChanged("MuseumAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MuseumId {
            get {
                return this.MuseumIdField;
            }
            set {
                if ((this.MuseumIdField.Equals(value) != true)) {
                    this.MuseumIdField = value;
                    this.RaisePropertyChanged("MuseumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MuseumName {
            get {
                return this.MuseumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MuseumNameField, value) != true)) {
                    this.MuseumNameField = value;
                    this.RaisePropertyChanged("MuseumName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Locations", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceMuseumNew")]
    [System.SerializableAttribute()]
    public partial class Locations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeasePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MuseumIdFKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurfaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeasePrice {
            get {
                return this.LeasePriceField;
            }
            set {
                if ((object.ReferenceEquals(this.LeasePriceField, value) != true)) {
                    this.LeasePriceField = value;
                    this.RaisePropertyChanged("LeasePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MuseumIdFK {
            get {
                return this.MuseumIdFKField;
            }
            set {
                if ((this.MuseumIdFKField.Equals(value) != true)) {
                    this.MuseumIdFKField = value;
                    this.RaisePropertyChanged("MuseumIdFK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surface {
            get {
                return this.SurfaceField;
            }
            set {
                if ((object.ReferenceEquals(this.SurfaceField, value) != true)) {
                    this.SurfaceField = value;
                    this.RaisePropertyChanged("Surface");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Exhibits", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceMuseumNew")]
    [System.SerializableAttribute()]
    public partial class Exhibits : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExhibitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoricPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdFKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderFormIdFKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimensions {
            get {
                return this.DimensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionsField, value) != true)) {
                    this.DimensionsField = value;
                    this.RaisePropertyChanged("Dimensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExhibitId {
            get {
                return this.ExhibitIdField;
            }
            set {
                if ((this.ExhibitIdField.Equals(value) != true)) {
                    this.ExhibitIdField = value;
                    this.RaisePropertyChanged("ExhibitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HistoricPeriod {
            get {
                return this.HistoricPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoricPeriodField, value) != true)) {
                    this.HistoricPeriodField = value;
                    this.RaisePropertyChanged("HistoricPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationIdFK {
            get {
                return this.LocationIdFKField;
            }
            set {
                if ((this.LocationIdFKField.Equals(value) != true)) {
                    this.LocationIdFKField = value;
                    this.RaisePropertyChanged("LocationIdFK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderFormIdFK {
            get {
                return this.OrderFormIdFKField;
            }
            set {
                if ((this.OrderFormIdFKField.Equals(value) != true)) {
                    this.OrderFormIdFKField = value;
                    this.RaisePropertyChanged("OrderFormIdFK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderForms", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceMuseumNew")]
    [System.SerializableAttribute()]
    public partial class OrderForms : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyerIdFKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderFormIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerAddress {
            get {
                return this.BuyerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerAddressField, value) != true)) {
                    this.BuyerAddressField = value;
                    this.RaisePropertyChanged("BuyerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyerIdFK {
            get {
                return this.BuyerIdFKField;
            }
            set {
                if ((this.BuyerIdFKField.Equals(value) != true)) {
                    this.BuyerIdFKField = value;
                    this.RaisePropertyChanged("BuyerIdFK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderFormId {
            get {
                return this.OrderFormIdField;
            }
            set {
                if ((this.OrderFormIdField.Equals(value) != true)) {
                    this.OrderFormIdField = value;
                    this.RaisePropertyChanged("OrderFormId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Buyers", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceMuseumNew")]
    [System.SerializableAttribute()]
    public partial class Buyers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyersAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyersCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyersIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyersNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyersSurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyersAddress {
            get {
                return this.BuyersAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyersAddressField, value) != true)) {
                    this.BuyersAddressField = value;
                    this.RaisePropertyChanged("BuyersAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyersCountry {
            get {
                return this.BuyersCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyersCountryField, value) != true)) {
                    this.BuyersCountryField = value;
                    this.RaisePropertyChanged("BuyersCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyersId {
            get {
                return this.BuyersIdField;
            }
            set {
                if ((this.BuyersIdField.Equals(value) != true)) {
                    this.BuyersIdField = value;
                    this.RaisePropertyChanged("BuyersId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyersName {
            get {
                return this.BuyersNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyersNameField, value) != true)) {
                    this.BuyersNameField = value;
                    this.RaisePropertyChanged("BuyersName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyersSurname {
            get {
                return this.BuyersSurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyersSurnameField, value) != true)) {
                    this.BuyersSurnameField = value;
                    this.RaisePropertyChanged("BuyersSurname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceMuseumNew")]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdministrator {
            get {
                return this.IsAdministratorField;
            }
            set {
                if ((this.IsAdministratorField.Equals(value) != true)) {
                    this.IsAdministratorField = value;
                    this.RaisePropertyChanged("IsAdministrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceMuseumNew")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/GetMuseum", ReplyAction="http://tempuri.org/IService1/getMuseumResponse")]
        WebApplicationMuseum.ServiceReference1.Museum[] getMuseum();
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/UpdateMuseum", ReplyAction="http://tempuri.org/IService1/updateMuseumResponse")]
        void updateMuseum(int museumId, string museumName, string museumAddress, System.DateTime established);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/GetLocations", ReplyAction="http://tempuri.org/IService1/getLocationsResponse")]
        WebApplicationMuseum.ServiceReference1.Locations[] getLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/UpdateLocations", ReplyAction="http://tempuri.org/IService1/updateLocationsResponse")]
        void updateLocations(int locationId, string locationName, string surface, string state, string leasePrice, int museumIdFK, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/DeleteLocation", ReplyAction="http://tempuri.org/IService1/deleteLocationResponse")]
        void deleteLocation(int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/FindLocations", ReplyAction="http://tempuri.org/IService1/findLocationsResponse")]
        WebApplicationMuseum.ServiceReference1.Locations[] findLocations(string locationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/AddLocations", ReplyAction="http://tempuri.org/IService1/addLocationsResponse")]
        void addLocations(string locationName, string surface, string state, string leasePrice, int museumIdFK, string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/GetExhibits", ReplyAction="http://tempuri.org/IService1/getExhibitsResponse")]
        WebApplicationMuseum.ServiceReference1.Exhibits[] getExhibits();
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/FindExhibits", ReplyAction="http://tempuri.org/IService1/findExhibitsResponse")]
        WebApplicationMuseum.ServiceReference1.Exhibits[] findExhibits(string type, string historicPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/DeleteExhibits", ReplyAction="http://tempuri.org/IService1/deleteExhibitsResponse")]
        void deleteExhibits(int exhibitId);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/AddExhibits", ReplyAction="http://tempuri.org/IService1/addExhibitsResponse")]
        void addExhibits(string type, string dimensions, string historicPeriod, int locationIdFK, int orderFormIdFK);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/UpdateExhibits", ReplyAction="http://tempuri.org/IService1/updateExhibitsResponse")]
        void updateExhibits(int exhibitId, string type, string dimensions, string historicPeriod, int locationIdFK, int orderFormIdFK);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/GetOrderForms", ReplyAction="http://tempuri.org/IService1/getOrderFormsResponse")]
        WebApplicationMuseum.ServiceReference1.OrderForms[] getOrderForms();
        
        [System.ServiceModel.OperationContractAttribute(Action="ServiceMuseum/DeleteOrderForms", ReplyAction="http://tempuri.org/IService1/deleteOrderFormsResponse")]
        void deleteOrderForms(int orderFormId);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/AddOrderForms", ReplyAction="http://tempuri.org/IService1/addOrderFormsResponse")]
        void addOrderForms(System.DateTime date, string buyerAdress, int buyerIdFk);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/UpdateOrderForms", ReplyAction="http://tempuri.org/IService1/updateOrderFormsResponse")]
        void updateOrderForms(int orderFormId, System.DateTime date, string buyerAddress, int buyerIdFk);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/FindOrderForms", ReplyAction="http://tempuri.org/IService1/findOrderFormsResponse")]
        WebApplicationMuseum.ServiceReference1.OrderForms[] findOrderForms(int buyerIdFk, string buyerAdress);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/GetBuyers", ReplyAction="http://tempuri.org/IService1/getBuyersResponse")]
        WebApplicationMuseum.ServiceReference1.Buyers[] getBuyers();
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/DeleteBuyers", ReplyAction="http://tempuri.org/IService1/deleteBuyersResponse")]
        void deleteBuyers(int buyerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/AddBuyers", ReplyAction="http://tempuri.org/IService1/addBuyersResponse")]
        void addBuyers(string buyersName, string buyersSurname, string buyersAddress, string buyersCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/UpdateBuyers", ReplyAction="http://tempuri.org/IService1/updateBuyersResponse")]
        void updateBuyers(int buyersId, string buyersName, string buyersSurname, string buyersAddress, string buyersCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/FindBuyers", ReplyAction="http://tempuri.org/IService1/findBuyersResponse")]
        WebApplicationMuseum.ServiceReference1.Buyers[] findBuyers(string buyersName, string buyersSurname);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/GetUsers", ReplyAction="http://tempuri.org/IService1/getUsersResponse")]
        WebApplicationMuseum.ServiceReference1.Users[] getUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/DeleteUsers", ReplyAction="http://tempuri.org/IService1/deleteUsersResponse")]
        void deleteUsers(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/FindUsers", ReplyAction="http://tempuri.org/IService1/findUsersResponse")]
        WebApplicationMuseum.ServiceReference1.Users[] findUsers(string name, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/AddUsers", ReplyAction="http://tempuri.org/IService1/addUsersResponse")]
        void addUsers(string name, string userName, string password, bool isAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="MuseumService/UpdateUsers", ReplyAction="http://tempuri.org/IService1/updateUsersResponse")]
        void updateUsers(int userID, string name, string userName, string password, bool isAdministrator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WebApplicationMuseum.ServiceReference1.CompositeType GetDataUsingDataContract(WebApplicationMuseum.ServiceReference1.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebApplicationMuseum.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebApplicationMuseum.ServiceReference1.IService1>, WebApplicationMuseum.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplicationMuseum.ServiceReference1.Museum[] getMuseum() {
            return base.Channel.getMuseum();
        }
        
        public void updateMuseum(int museumId, string museumName, string museumAddress, System.DateTime established) {
            base.Channel.updateMuseum(museumId, museumName, museumAddress, established);
        }
        
        public WebApplicationMuseum.ServiceReference1.Locations[] getLocations() {
            return base.Channel.getLocations();
        }
        
        public void updateLocations(int locationId, string locationName, string surface, string state, string leasePrice, int museumIdFK, string country) {
            base.Channel.updateLocations(locationId, locationName, surface, state, leasePrice, museumIdFK, country);
        }
        
        public void deleteLocation(int locationId) {
            base.Channel.deleteLocation(locationId);
        }
        
        public WebApplicationMuseum.ServiceReference1.Locations[] findLocations(string locationName) {
            return base.Channel.findLocations(locationName);
        }
        
        public void addLocations(string locationName, string surface, string state, string leasePrice, int museumIdFK, string country) {
            base.Channel.addLocations(locationName, surface, state, leasePrice, museumIdFK, country);
        }
        
        public WebApplicationMuseum.ServiceReference1.Exhibits[] getExhibits() {
            return base.Channel.getExhibits();
        }
        
        public WebApplicationMuseum.ServiceReference1.Exhibits[] findExhibits(string type, string historicPeriod) {
            return base.Channel.findExhibits(type, historicPeriod);
        }
        
        public void deleteExhibits(int exhibitId) {
            base.Channel.deleteExhibits(exhibitId);
        }
        
        public void addExhibits(string type, string dimensions, string historicPeriod, int locationIdFK, int orderFormIdFK) {
            base.Channel.addExhibits(type, dimensions, historicPeriod, locationIdFK, orderFormIdFK);
        }
        
        public void updateExhibits(int exhibitId, string type, string dimensions, string historicPeriod, int locationIdFK, int orderFormIdFK) {
            base.Channel.updateExhibits(exhibitId, type, dimensions, historicPeriod, locationIdFK, orderFormIdFK);
        }
        
        public WebApplicationMuseum.ServiceReference1.OrderForms[] getOrderForms() {
            return base.Channel.getOrderForms();
        }
        
        public void deleteOrderForms(int orderFormId) {
            base.Channel.deleteOrderForms(orderFormId);
        }
        
        public void addOrderForms(System.DateTime date, string buyerAdress, int buyerIdFk) {
            base.Channel.addOrderForms(date, buyerAdress, buyerIdFk);
        }
        
        public void updateOrderForms(int orderFormId, System.DateTime date, string buyerAddress, int buyerIdFk) {
            base.Channel.updateOrderForms(orderFormId, date, buyerAddress, buyerIdFk);
        }
        
        public WebApplicationMuseum.ServiceReference1.OrderForms[] findOrderForms(int buyerIdFk, string buyerAdress) {
            return base.Channel.findOrderForms(buyerIdFk, buyerAdress);
        }
        
        public WebApplicationMuseum.ServiceReference1.Buyers[] getBuyers() {
            return base.Channel.getBuyers();
        }
        
        public void deleteBuyers(int buyerId) {
            base.Channel.deleteBuyers(buyerId);
        }
        
        public void addBuyers(string buyersName, string buyersSurname, string buyersAddress, string buyersCountry) {
            base.Channel.addBuyers(buyersName, buyersSurname, buyersAddress, buyersCountry);
        }
        
        public void updateBuyers(int buyersId, string buyersName, string buyersSurname, string buyersAddress, string buyersCountry) {
            base.Channel.updateBuyers(buyersId, buyersName, buyersSurname, buyersAddress, buyersCountry);
        }
        
        public WebApplicationMuseum.ServiceReference1.Buyers[] findBuyers(string buyersName, string buyersSurname) {
            return base.Channel.findBuyers(buyersName, buyersSurname);
        }
        
        public WebApplicationMuseum.ServiceReference1.Users[] getUsers() {
            return base.Channel.getUsers();
        }
        
        public void deleteUsers(int userId) {
            base.Channel.deleteUsers(userId);
        }
        
        public WebApplicationMuseum.ServiceReference1.Users[] findUsers(string name, string userName) {
            return base.Channel.findUsers(name, userName);
        }
        
        public void addUsers(string name, string userName, string password, bool isAdministrator) {
            base.Channel.addUsers(name, userName, password, isAdministrator);
        }
        
        public void updateUsers(int userID, string name, string userName, string password, bool isAdministrator) {
            base.Channel.updateUsers(userID, name, userName, password, isAdministrator);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public WebApplicationMuseum.ServiceReference1.CompositeType GetDataUsingDataContract(WebApplicationMuseum.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
    }
}
